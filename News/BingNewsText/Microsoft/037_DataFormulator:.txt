{
    "authors": [],
    "date_download": "None",
    "date_modify": "None",
    "date_publish": "None",
    "description": "\ud83e\ude84 Create rich visualizations with AI . Contribute to microsoft/data-formulator development by creating an account on GitHub.",
    "filename": ".json",
    "image_url": "https://opengraph.githubassets.com/bbd84f2b59b528885e2a6ed536a0fea028429c15e445370a6b2f1335fdc1c5dc/microsoft/data-formulator",
    "language": "en",
    "localpath": null,
    "maintext": "Transform data and create rich visualizations iteratively with AI \ud83e\ude84. Try Data Formulator now in GitHub Codespaces!\n[11-07-2024] Minor fun update: data visualization challenges!\nWe added a few visualization challenges with the sample datasets. Can you complete them all? [try them out!]\nComment in the issue when you did, or share your results/questions with others! [comment here]\n[10-11-2024] Data Formulator python package released!\nYou can now install Data Formulator using Python and run it locally, easily. [check it out].\nOur Codespaces configuration is also updated for fast start up \u26a1\ufe0f. [try it now!]\nNew experimental feature: load an image or a messy text, and ask AI to parse and clean it for you(!). [demo]\n[10-01-2024] Initial release of Data Formulator, check out our [blog] and [video]!\nData Formulator is an application from Microsoft Research that uses large language models to transform data, expediting the practice of data visualization.\nData Formulator is an AI-powered tool for analysts to iteratively create rich visualizations. Unlike most chat-based AI tools where users need to describe everything in natural language, Data Formulator combines user interface interactions (UI) and natural language (NL) inputs for easier interaction. This blended approach makes it easier for users to describe their chart designs while delegating data transformation to AI.\nPlay with Data Formulator with one of the following options:\nOption 1: Install via Python PIP\nUse Python PIP for an easy setup experience, running locally (recommend: install it in a virtual environment).\n# install data_formulator pip install data_formulator # start data_formulator data_formulator # alternatively, you can run data formualtor with this command python -m data_formulator\nData Formulator will be automatically opened in the browser at http://localhost:5000.\nUpdate: you can specify the port number (e.g., 8080) by python -m data_formulator --port 8080 if the default port is occupied.\nOption 2: Codespaces (5 minutes)\nYou can also run Data Formulator in Codespaces; we have everything pre-configured. For more details, see CODESPACES.md.\nOption 3: Working in the developer mode\nYou can build Data Formulator locally if you prefer full control over your development environment and the ability to customize the setup to your specific needs. For detailed instructions, refer to DEVELOPMENT.md.\nOnce you\u2019ve completed the setup using either option, follow these steps to start using Data Formulator:\nProvide OpenAI keys and select a model (GPT-4o suggested) and choose a dataset.\nChoose a chart type, and then drag-and-drop data fields to chart properties (x, y, color, ...) to specify visual encodings.\nrenewable.mp4\nYou can type names of fields that do not exist in current data in the encoding shelf:\nthis tells Data Formulator that you want to create visualizations that require computation or transformation from existing data,\nyou can optionally provide a natural language prompt to explain and clarify your intent (not necessary when field names are self-explanatory).\nClick the Formulate button.\nData Formulator will transform data and instantiate the visualization based on the encoding and prompt.\nInspect the data, chart and code.\nTo create a new chart based on existing ones, follow up in natural language:\nprovide a follow up prompt (e.g., ``show only top 5!''),\nyou may also update visual encodings for the new chart.\nrenewable-pct.mp4 renewable-rank.mp4\nRepeat this process as needed to explore and understand your data. Your explorations are trackable in the Data Threads panel.\nFollow the developers' instructions to build your new data analysis tools on top of Data Formulator.\nData Formulator 2: Iteratively Creating Rich Visualizations with AI\nData Formulator: AI-powered Concept-driven Visualization Authoring\nThis project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit https://cla.microsoft.com.\nWhen you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repositories using our CLA.\nThis project has adopted the Microsoft Open Source Code of Conduct. For more information see the Code of Conduct FAQ or contact opencode@microsoft.com with any additional questions or comments.",
    "source_domain": null,
    "text": null,
    "title": "formulator: \ud83e\ude84 Create rich visualizations with AI",
    "title_page": null,
    "title_rss": null,
    "url": null
}